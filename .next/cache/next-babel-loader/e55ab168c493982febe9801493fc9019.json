{"ast":null,"code":"import * as types from './actionTypes';\nimport Axios from 'axios';\nexport const clickingHamburger = () => ({\n  type: types.CLICK_HAMBURGER\n});\nexport const clickingNavClose = () => ({\n  type: types.CLICK_NAV_CLOSE\n});\nexport const clickingNavLocationFolder = () => ({\n  type: types.CLICK_NAV_LOCATION_FOLDER\n});\nexport const clickingNavKtown1stFolder = () => ({\n  type: types.CLICK_NAV_KTOWN1ST_FOLDER\n});\nexport const clickingHeaderSection = data => ({\n  type: types.CLICK_HEADER_SECTION,\n  arg: data\n});\nexport const clickingBtnMore = () => ({\n  type: types.CLICK_BTN_MORE\n});\nexport const clickingMainLogo = () => ({\n  type: types.CLICK_MAIN_LOGO\n});\nexport const clickingNavLivingInfo = () => ({\n  type: types.CLICK_NAV_LIVING_INFO\n});\nexport const clickingSearchBtn = () => ({\n  type: types.ClICK_SEARCH_BTN\n});\nexport const changingHeaderGnb = type => ({\n  type: types.CHANGE_HEADER_GNB,\n  arg: type\n});\nexport const petchingMainTopNews = () => {\n  return async dispatch => {\n    /*let config = {\n        headers: {\n            'Content-Type' : 'application/x-www-form-urlencoded',\n            'Access-Control-Allow-Origin': '*',\n        },\n        responseType: 'json',\n        withCredentials: true,\n        credentials: 'same-origin',\n    }*/\n    await Axios.get(`http://data.koreatimes.com/publishing/la/main_top/main_top.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      // console.log(response)\n      dispatch({\n        type: types.PETCHING_MAIN_TOP_NEWS,\n        arg: response.data\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const petchingMainNewsList = () => {\n  return async dispatch => {\n    const branch = 'la';\n    let newsList = new Array();\n    await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top1/top1.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      // console.log(response.data)\n      newsList = newsList.concat(response.data.data); //console.log(newsList)\n    }).catch(error => console.log(error));\n    await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top2/top2.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      //console.log(response.data)\n      newsList = newsList.concat(response.data.data); //console.log(newsList)\n    }).catch(error => console.log(error));\n    await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top_list/top_list.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      //console.log(response.data)\n      newsList = newsList.concat(response.data.data); //console.log(newsList)\n    }).catch(error => console.log(error));\n    await Axios.get(`http://data.koreatimes.com/publishing/${branch}/economy/economy.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      //console.log(response.data)\n      newsList = newsList.concat(response.data.data); //console.log(newsList)\n    }).catch(error => console.log(error));\n    dispatch({\n      type: types.PETCHING_MAIN_NEWS_LIST,\n      arg: newsList\n    });\n  };\n};\nexport const petchingSectionOpinion = () => {\n  return async dispatch => {\n    await Axios.get(`http://data.koreatimes.com/publishing/la/opinion/opinion.data`).then(function (response) {\n      // console.log(response.data)\n      dispatch({\n        type: types.PETCHING_SECTION_OPINION,\n        arg: response.data\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const petchingPhotoNews = () => {\n  return async dispatch => {\n    /*let config = {\n        headers: {\n            'Content-Type' : 'application/x-www-form-urlencoded',\n            'Access-Control-Allow-Origin': '*',\n        },\n        responseType: 'json',\n        withCredentials: true,\n        credentials: 'same-origin',\n    }*/\n    await Axios.get(`http://data.koreatimes.com/publishing/photonews/la/la.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      // console.log(response.data)\n      dispatch({\n        type: types.PETCHING_PHOTO_NEWS,\n        arg: response.data\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const petchingMainOpinion = () => {\n  return async dispatch => {\n    await Axios.get(`http://data.koreatimes.com/manage/cron/opinion/opinion.data`) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      // console.log(response.data.data )\n      dispatch({\n        type: types.PETCHING_MAIN_OPINION,\n        arg: response.data.data\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const petchingArticleDetail = (p2, p3) => {\n  let p2Index;\n\n  if (p3) {\n    p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n  } else {} //console.log(p3)\n  //}\n\n\n  const url = `http://data.koreatimes.com/article/${p2Index}/${p3}.data`;\n  return async dispatch => {\n    await Axios.get(url) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      console.log(response.data);\n      dispatch({\n        type: types.PETCHING_ARTICLE_DETAIL,\n        arg: response.data\n      });\n    }).catch(error => console.log(error));\n  };\n};\nexport const petchingArticleDetailBestClick = (p2, p3) => {\n  let p2Index;\n\n  if (p3) {\n    p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n  } else {} //console.log(p3)\n  //}\n\n\n  const url = `http://data.koreatimes.com/manage/cron/bestclick/bestclick.data`;\n  return async dispatch => {\n    await Axios.get(url) //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n    .then(function (response) {\n      // console.log(response.data )\n      dispatch({\n        type: types.PETCHING_ARTICLE_DETAIL_BESTCLICK,\n        arg: response.data.slice(0, 5)\n      });\n    }).catch(error => console.log(error));\n  };\n};","map":{"version":3,"sources":["C:/Users/NewMedia/PhpstormProjects/test1017/sample/test2/actions/actions.js"],"names":["types","Axios","clickingHamburger","type","CLICK_HAMBURGER","clickingNavClose","CLICK_NAV_CLOSE","clickingNavLocationFolder","CLICK_NAV_LOCATION_FOLDER","clickingNavKtown1stFolder","CLICK_NAV_KTOWN1ST_FOLDER","clickingHeaderSection","data","CLICK_HEADER_SECTION","arg","clickingBtnMore","CLICK_BTN_MORE","clickingMainLogo","CLICK_MAIN_LOGO","clickingNavLivingInfo","CLICK_NAV_LIVING_INFO","clickingSearchBtn","ClICK_SEARCH_BTN","changingHeaderGnb","CHANGE_HEADER_GNB","petchingMainTopNews","dispatch","get","then","response","PETCHING_MAIN_TOP_NEWS","catch","error","console","log","petchingMainNewsList","branch","newsList","Array","concat","PETCHING_MAIN_NEWS_LIST","petchingSectionOpinion","PETCHING_SECTION_OPINION","petchingPhotoNews","PETCHING_PHOTO_NEWS","petchingMainOpinion","PETCHING_MAIN_OPINION","petchingArticleDetail","p2","p3","p2Index","substring","url","PETCHING_ARTICLE_DETAIL","petchingArticleDetailBestClick","PETCHING_ARTICLE_DETAIL_BESTCLICK","slice"],"mappings":"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","sourcesContent":["import * as types from './actionTypes'\nimport Axios from 'axios'\n\nexport const clickingHamburger = () => ({\n  type: types.CLICK_HAMBURGER\n})\nexport const clickingNavClose = () => ({\n  type: types.CLICK_NAV_CLOSE\n})\nexport const clickingNavLocationFolder = () => ({\n  type: types.CLICK_NAV_LOCATION_FOLDER,\n})\nexport const clickingNavKtown1stFolder = () => ({\n  type: types.CLICK_NAV_KTOWN1ST_FOLDER,\n})\nexport const clickingHeaderSection = (data) => ({\n  type: types.CLICK_HEADER_SECTION, arg: data\n})\nexport const clickingBtnMore = () => ({\n  type: types.CLICK_BTN_MORE,\n})\nexport const clickingMainLogo = () => ({\n  type: types.CLICK_MAIN_LOGO,\n})\nexport const clickingNavLivingInfo = () => ({\n  type: types.CLICK_NAV_LIVING_INFO,\n})\nexport const clickingSearchBtn = () => ({\n  type: types.ClICK_SEARCH_BTN,\n})\nexport const changingHeaderGnb = (type) => ({\n    type: types.CHANGE_HEADER_GNB, arg: type\n})\n\nexport const petchingMainTopNews = () => {\n  return async (dispatch) => {\n      /*let config = {\n          headers: {\n              'Content-Type' : 'application/x-www-form-urlencoded',\n              'Access-Control-Allow-Origin': '*',\n          },\n          responseType: 'json',\n          withCredentials: true,\n          credentials: 'same-origin',\n      }*/\n    await Axios.get(`http://data.koreatimes.com/publishing/la/main_top/main_top.data` )\n    //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n        .then(function (response) {\n           // console.log(response)\n          dispatch({\n            type: types.PETCHING_MAIN_TOP_NEWS,\n            arg: response.data\n          });\n        })\n        .catch((error) => console.log(error));\n  }\n}\n\nexport const petchingMainNewsList = () => {\n    return async (dispatch) => {\n\n        const branch = 'la';\n        let newsList = new Array();\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top1/top1.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top2/top2.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top_list/top_list.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/economy/economy.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        dispatch({\n            type: types.PETCHING_MAIN_NEWS_LIST,\n            arg: newsList\n        });\n    }\n}\n\nexport const petchingSectionOpinion = () => {\n    return async (dispatch) => {\n\n        await Axios.get(`http://data.koreatimes.com/publishing/la/opinion/opinion.data` )\n            .then(function (response) {\n               // console.log(response.data)\n                dispatch({\n                    type: types.PETCHING_SECTION_OPINION,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n\n\n\n    }\n}\n\nexport const petchingPhotoNews = () => {\n    return async (dispatch) => {\n        /*let config = {\n            headers: {\n                'Content-Type' : 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n            },\n            responseType: 'json',\n            withCredentials: true,\n            credentials: 'same-origin',\n        }*/\n        await Axios.get( `http://data.koreatimes.com/publishing/photonews/la/la.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data)\n                dispatch({\n                    type: types.PETCHING_PHOTO_NEWS,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingMainOpinion = () => {\n    return async (dispatch) => {\n        await Axios.get(`http://data.koreatimes.com/manage/cron/opinion/opinion.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                // console.log(response.data.data )\n                dispatch({\n                    type: types.PETCHING_MAIN_OPINION,\n                    arg: response.data.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingArticleDetail = (p2, p3) => {\n\n    let p2Index\n\n    if(p3) {\n        p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n    } else {\n        //console.log(p3)\n    }\n    //}\n\n    const url = `http://data.koreatimes.com/article/${p2Index}/${p3}.data`\n    return async (dispatch) => {\n        await Axios.get(url)\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                 console.log(response.data )\n                dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingArticleDetailBestClick = (p2, p3) => {\n    let p2Index\n\n    if(p3) {\n        p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n    } else {\n        //console.log(p3)\n    }\n    //}\n\n    const url = `http://data.koreatimes.com/manage/cron/bestclick/bestclick.data`\n    return async (dispatch) => {\n        await Axios.get(url)\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data )\n                dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL_BESTCLICK,\n                    arg: response.data.slice(0,5)\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}