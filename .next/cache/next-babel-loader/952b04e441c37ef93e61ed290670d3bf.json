{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; //import { clickingHeaderSection } from '../../actions/actions'\n\nimport GnbList from '../../constants/gnbList';\nimport { NavLink } from 'react-router-dom';\nimport { changingHeaderGnb } from \"../../actions/actions\";\n\nclass Gnb extends Component {\n  constructor(props) {\n    super(props); // const { switchReducer, location } = this.props;\n\n    /* const { switchReducer, location } = this.props;\r\n       this.state = {\r\n         hSection : {switchReducer}.switchReducer.gnbSelector\r\n     }*/\n  } // static getDerivedStateFromProps(nextProps) {\n  //console.log(nextProps)\n  //return changingHeaderGnb(nextProps.match.params.p1)\n  // return { p1: nextProps.match.params.p1 }\n  // }\n\n  /*\r\n    getDerivedStateFromProps() {\r\n          this.setState({hSection : {switchReducer}.switchReducer.gnbSelector})\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log(prevProps)\r\n      //if(prevProps.switchReducer.gnbSelector!=this.props.match.params.p1) {\r\n     //     changingHeaderGnb(this.props.match.params.p1)\r\n     // }\r\n  }*/\n\n\n  _makingGnb() {\n    const {\n      switchReducer\n    } = this.props; //const hSection = { switchReducer }.switchReducer.headerSection;\n    //const mSection = { section }.section.mainSection;\n\n    let hSection = {\n      switchReducer\n    }.switchReducer.gnbSelector;\n    let selectedGnb = GnbList.gnbs.find(function (row) {\n      if (row.id == hSection) {\n        return row;\n      }\n    }); // section 일 경우 1depth 더 들어감\n\n    if (hSection == 'section') {\n      selectedGnb = selectedGnb.list.find(function (row) {\n        if (row.id == {\n          switchReducer\n        }.switchReducer.gnbSubSelector) {\n          hSection = 'section/' + row.id;\n          return row;\n        }\n      });\n    }\n\n    let selectedGnbli = selectedGnb.list.map(row => {\n      return __jsx(\"li\", {\n        key: row.id\n      }, __jsx(NavLink, {\n        to: '/' + (hSection == 'main' ? '' : hSection + '/') + row.id,\n        activeClassName: \"on\"\n      }, row.name)); //return <li key={row.id} className={ row.id==mSection ? \"on\" : \"\" }><a onClick={(e)=>this.click(row.id)}>{row.name}</a></li>\n      //return <li key={row.id} className={ row.id==mSection ? \"on\" : \"\" }><ActiveLink href={'/index'} >{row.name}</ActiveLink></li>\n    });\n    return __jsx(\"div\", {\n      id: \"gnb\",\n      className: hSection.substring(0, 7) == 'section' ? 'section_gnb' : ''\n    }, __jsx(\"ul\", {\n      className: hSection == 'main' ? 'clearfix' : 'scroll'\n    }, selectedGnbli));\n  }\n  /* click = (e) => {\r\n       const { clickingHeaderSection } = this.props\r\n       clickingHeaderSection(e)\r\n   } */\n\n\n  render() {\n    // const { switchReducer } = this.props;\n    return __jsx(React.Fragment, null, this._makingGnb());\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    switchReducer\n  } = state;\n  return {\n    switchReducer\n  };\n}\n/*\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ clickingHeaderSection }, dispatch)\r\n*/\n\n\nexport default connect(mapStateToProps, null)(Gnb);","map":{"version":3,"sources":["C:/Users/NewMedia/PhpstormProjects/test1017/sample/test2/components/header/gnb.js"],"names":["React","Component","connect","GnbList","NavLink","changingHeaderGnb","Gnb","constructor","props","_makingGnb","switchReducer","hSection","gnbSelector","selectedGnb","gnbs","find","row","id","list","gnbSubSelector","selectedGnbli","map","name","substring","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAIA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAExBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEhB;;AAEA;;;;AAKF,GAXuB,CAazB;AACK;AACA;AACD;AACJ;;AAEC;;;;;;;;;;;;AAiBAC,EAAAA,UAAU,GAAG;AAET,UAAM;AAAEC,MAAAA;AAAF,QAAoB,KAAKF,KAA/B,CAFS,CAIT;AACA;;AAEA,QAAIG,QAAQ,GAAG;AAAED,MAAAA;AAAF,MAAkBA,aAAlB,CAAgCE,WAA/C;AAEA,QAAIC,WAAW,GAAGV,OAAO,CAACW,IAAR,CAAaC,IAAb,CAAkB,UAAUC,GAAV,EAAe;AAC/C,UAAIA,GAAG,CAACC,EAAJ,IAAQN,QAAZ,EAAsB;AAClB,eAAOK,GAAP;AACH;AACJ,KAJiB,CAAlB,CATS,CAeT;;AACA,QAAGL,QAAQ,IAAE,SAAb,EAAwB;AACpBE,MAAAA,WAAW,GAAGA,WAAW,CAACK,IAAZ,CAAiBH,IAAjB,CAAsB,UAASC,GAAT,EAAc;AAC9C,YAAGA,GAAG,CAACC,EAAJ,IAAQ;AAAEP,UAAAA;AAAF,UAAkBA,aAAlB,CAAgCS,cAA3C,EAA2D;AACvDR,UAAAA,QAAQ,GAAG,aAAWK,GAAG,CAACC,EAA1B;AACA,iBAAOD,GAAP;AACH;AACJ,OALa,CAAd;AAMH;;AAED,QAAII,aAAa,GAAGP,WAAW,CAACK,IAAZ,CAAiBG,GAAjB,CAAsBL,GAAD,IAAS;AAE9C,aAAO;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACC;AAAb,SAAiB,MAAC,OAAD;AAAS,QAAA,EAAE,EAAG,OAAON,QAAQ,IAAE,MAAV,GAAiB,EAAjB,GAAqBA,QAAQ,GAAC,GAArC,IAA4CK,GAAG,CAACC,EAA9D;AAAkE,QAAA,eAAe,EAAC;AAAlF,SAAwFD,GAAG,CAACM,IAA5F,CAAjB,CAAP,CAF8C,CAG7C;AACD;AACH,KALmB,CAApB;AAOA,WAAO;AAAK,MAAA,EAAE,EAAC,KAAR;AAAc,MAAA,SAAS,EAAGX,QAAQ,CAACY,SAAT,CAAmB,CAAnB,EAAqB,CAArB,KAAyB,SAAzB,GAAqC,aAArC,GAAqD;AAA/E,OAAoF;AAAI,MAAA,SAAS,EAAGZ,QAAQ,IAAE,MAAV,GAAmB,UAAnB,GAAgC;AAAhD,OAA4DS,aAA5D,CAApF,CAAP;AAEH;AAEF;;;;;;AAKCI,EAAAA,MAAM,GAAI;AAEP;AAEC,WACQ,4BACK,KAAKf,UAAL,EADL,CADR;AAKH;;AAtFuB;;AAyF5B,SAASgB,eAAT,CAA0BC,KAA1B,EAAiC;AAC7B,QAAM;AAAEhB,IAAAA;AAAF,MAAoBgB,KAA1B;AACA,SAAO;AAAEhB,IAAAA;AAAF,GAAP;AACH;AAED;;;;;;AAIA,eAAeR,OAAO,CAClBuB,eADkB,EAElB,IAFkB,CAAP,CAGbnB,GAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n//import { clickingHeaderSection } from '../../actions/actions'\r\nimport GnbList from '../../constants/gnbList'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport {changingHeaderGnb} from \"../../actions/actions\";\r\n\r\n\r\n\r\nclass Gnb extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n       // const { switchReducer, location } = this.props;\r\n\r\n       /* const { switchReducer, location } = this.props;\r\n\r\n        this.state = {\r\n            hSection : {switchReducer}.switchReducer.gnbSelector\r\n        }*/\r\n    }\r\n\r\n   // static getDerivedStateFromProps(nextProps) {\r\n        //console.log(nextProps)\r\n        //return changingHeaderGnb(nextProps.match.params.p1)\r\n       // return { p1: nextProps.match.params.p1 }\r\n   // }\r\n\r\n    /*\r\n\r\n    getDerivedStateFromProps() {\r\n\r\n\r\n        this.setState({hSection : {switchReducer}.switchReducer.gnbSelector})\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        console.log(prevProps)\r\n        //if(prevProps.switchReducer.gnbSelector!=this.props.match.params.p1) {\r\n       //     changingHeaderGnb(this.props.match.params.p1)\r\n       // }\r\n    }*/\r\n\r\n    _makingGnb() {\r\n\r\n        const { switchReducer } = this.props;\r\n\r\n        //const hSection = { switchReducer }.switchReducer.headerSection;\r\n        //const mSection = { section }.section.mainSection;\r\n\r\n        let hSection = { switchReducer }.switchReducer.gnbSelector\r\n\r\n        let selectedGnb = GnbList.gnbs.find(function (row) {\r\n            if( row.id==hSection) {\r\n                return row\r\n            }\r\n        });\r\n\r\n        // section 일 경우 1depth 더 들어감\r\n        if(hSection=='section') {\r\n            selectedGnb = selectedGnb.list.find(function(row) {\r\n                if(row.id=={ switchReducer }.switchReducer.gnbSubSelector) {\r\n                    hSection = 'section/'+row.id\r\n                    return row\r\n                }\r\n            })\r\n        }\r\n\r\n        let selectedGnbli = selectedGnb.list.map((row) => {\r\n\r\n            return <li key={row.id}><NavLink to={ '/' + (hSection=='main'?'': hSection+'/') + row.id} activeClassName=\"on\">{row.name}</NavLink></li>\r\n             //return <li key={row.id} className={ row.id==mSection ? \"on\" : \"\" }><a onClick={(e)=>this.click(row.id)}>{row.name}</a></li>\r\n            //return <li key={row.id} className={ row.id==mSection ? \"on\" : \"\" }><ActiveLink href={'/index'} >{row.name}</ActiveLink></li>\r\n        });\r\n\r\n        return <div id=\"gnb\" className={ hSection.substring(0,7)=='section' ? 'section_gnb' : '' }><ul className={ hSection=='main' ? 'clearfix' : 'scroll' }>{selectedGnbli}</ul></div>\r\n\r\n    }\r\n\r\n   /* click = (e) => {\r\n        const { clickingHeaderSection } = this.props\r\n        clickingHeaderSection(e)\r\n    } */\r\n\r\n    render () {\r\n\r\n       // const { switchReducer } = this.props;\r\n\r\n        return (\r\n                <>\r\n                    {this._makingGnb()}\r\n                </>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n    const { switchReducer } = state\r\n    return { switchReducer }\r\n}\r\n\r\n/*\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({ clickingHeaderSection }, dispatch)\r\n*/\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Gnb)\r\n"]},"metadata":{},"sourceType":"module"}