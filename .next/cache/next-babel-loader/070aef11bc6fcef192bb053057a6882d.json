{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as types from './actionTypes';\nimport Axios from 'axios';\nexport var clickingHamburger = function clickingHamburger() {\n  return {\n    type: types.CLICK_HAMBURGER\n  };\n};\nexport var clickingNavClose = function clickingNavClose() {\n  return {\n    type: types.CLICK_NAV_CLOSE\n  };\n};\nexport var clickingNavLocationFolder = function clickingNavLocationFolder() {\n  return {\n    type: types.CLICK_NAV_LOCATION_FOLDER\n  };\n};\nexport var clickingNavKtown1stFolder = function clickingNavKtown1stFolder() {\n  return {\n    type: types.CLICK_NAV_KTOWN1ST_FOLDER\n  };\n};\nexport var clickingHeaderSection = function clickingHeaderSection(data) {\n  return {\n    type: types.CLICK_HEADER_SECTION,\n    arg: data\n  };\n};\nexport var clickingBtnMore = function clickingBtnMore() {\n  return {\n    type: types.CLICK_BTN_MORE\n  };\n};\nexport var clickingMainLogo = function clickingMainLogo() {\n  return {\n    type: types.CLICK_MAIN_LOGO\n  };\n};\nexport var clickingNavLivingInfo = function clickingNavLivingInfo() {\n  return {\n    type: types.CLICK_NAV_LIVING_INFO\n  };\n};\nexport var clickingSearchBtn = function clickingSearchBtn() {\n  return {\n    type: types.ClICK_SEARCH_BTN\n  };\n};\nexport var changingHeaderGnb = function changingHeaderGnb(type) {\n  return {\n    type: types.CHANGE_HEADER_GNB,\n    arg: type\n  };\n};\nexport var petchingMainTopNews = function petchingMainTopNews() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Axios.get(\"http://data.koreatimes.com/publishing/la/main_top/main_top.data\") //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  // console.log(response)\n                  dispatch({\n                    type: types.PETCHING_MAIN_TOP_NEWS,\n                    arg: response.data\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingMainNewsList = function petchingMainNewsList() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var branch, newsList;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                branch = 'la';\n                newsList = new Array();\n                _context2.next = 4;\n                return Axios.get(\"http://data.koreatimes.com/publishing/\".concat(branch, \"/top1/top1.data\")) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  // console.log(response.data)\n                  newsList = newsList.concat(response.data.data); //console.log(newsList)\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 4:\n                _context2.next = 6;\n                return Axios.get(\"http://data.koreatimes.com/publishing/\".concat(branch, \"/top2/top2.data\")) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  //console.log(response.data)\n                  newsList = newsList.concat(response.data.data); //console.log(newsList)\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 6:\n                _context2.next = 8;\n                return Axios.get(\"http://data.koreatimes.com/publishing/\".concat(branch, \"/top_list/top_list.data\")) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  //console.log(response.data)\n                  newsList = newsList.concat(response.data.data); //console.log(newsList)\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 8:\n                _context2.next = 10;\n                return Axios.get(\"http://data.koreatimes.com/publishing/\".concat(branch, \"/economy/economy.data\")) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  //console.log(response.data)\n                  newsList = newsList.concat(response.data.data); //console.log(newsList)\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 10:\n                dispatch({\n                  type: types.PETCHING_MAIN_NEWS_LIST,\n                  arg: newsList\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingSectionOpinion = function petchingSectionOpinion() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Axios.get(\"http://data.koreatimes.com/publishing/la/opinion/opinion.data\").then(function (response) {\n                  // console.log(response.data)\n                  dispatch({\n                    type: types.PETCHING_SECTION_OPINION,\n                    arg: response.data\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingPhotoNews = function petchingPhotoNews() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return Axios.get(\"http://data.koreatimes.com/publishing/photonews/la/la.data\") //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  // console.log(response.data)\n                  dispatch({\n                    type: types.PETCHING_PHOTO_NEWS,\n                    arg: response.data\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingMainOpinion = function petchingMainOpinion() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Axios.get(\"http://data.koreatimes.com/manage/cron/opinion/opinion.data\") //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  // console.log(response.data.data )\n                  dispatch({\n                    type: types.PETCHING_MAIN_OPINION,\n                    arg: response.data.data\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingArticleDetail = function petchingArticleDetail(p2, p3) {\n  var p2Index;\n\n  if (p3) {\n    p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n  } else {} //console.log(p3)\n  //}\n\n\n  var url = \"http://data.koreatimes.com/article/\".concat(p2Index, \"/\").concat(p3, \".data\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Axios.get(url) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  console.log(response.data);\n                  dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL,\n                    arg: response.data\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var petchingArticleDetailBestClick = function petchingArticleDetailBestClick(p2, p3) {\n  var p2Index;\n\n  if (p3) {\n    p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n  } else {} //console.log(p3)\n  //}\n\n\n  var url = \"http://data.koreatimes.com/manage/cron/bestclick/bestclick.data\";\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Axios.get(url) //await fetch('https://cloudreports.net/sample/api/countries.json')\n                //    .then((response) => response.json())\n                .then(function (response) {\n                  // console.log(response.data )\n                  dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL_BESTCLICK,\n                    arg: response.data.slice(0, 5)\n                  });\n                })[\"catch\"](function (error) {\n                  return console.log(error);\n                });\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      return function (_x7) {\n        return _ref7.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["C:/Users/NewMedia/PhpstormProjects/test1017/sample/test2/actions/actions.js"],"names":["types","Axios","clickingHamburger","type","CLICK_HAMBURGER","clickingNavClose","CLICK_NAV_CLOSE","clickingNavLocationFolder","CLICK_NAV_LOCATION_FOLDER","clickingNavKtown1stFolder","CLICK_NAV_KTOWN1ST_FOLDER","clickingHeaderSection","data","CLICK_HEADER_SECTION","arg","clickingBtnMore","CLICK_BTN_MORE","clickingMainLogo","CLICK_MAIN_LOGO","clickingNavLivingInfo","CLICK_NAV_LIVING_INFO","clickingSearchBtn","ClICK_SEARCH_BTN","changingHeaderGnb","CHANGE_HEADER_GNB","petchingMainTopNews","dispatch","get","then","response","PETCHING_MAIN_TOP_NEWS","error","console","log","petchingMainNewsList","branch","newsList","Array","concat","PETCHING_MAIN_NEWS_LIST","petchingSectionOpinion","PETCHING_SECTION_OPINION","petchingPhotoNews","PETCHING_PHOTO_NEWS","petchingMainOpinion","PETCHING_MAIN_OPINION","petchingArticleDetail","p2","p3","p2Index","substring","url","PETCHING_ARTICLE_DETAIL","petchingArticleDetailBestClick","PETCHING_ARTICLE_DETAIL_BESTCLICK","slice"],"mappings":"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","sourcesContent":["import * as types from './actionTypes'\nimport Axios from 'axios'\n\nexport const clickingHamburger = () => ({\n  type: types.CLICK_HAMBURGER\n})\nexport const clickingNavClose = () => ({\n  type: types.CLICK_NAV_CLOSE\n})\nexport const clickingNavLocationFolder = () => ({\n  type: types.CLICK_NAV_LOCATION_FOLDER,\n})\nexport const clickingNavKtown1stFolder = () => ({\n  type: types.CLICK_NAV_KTOWN1ST_FOLDER,\n})\nexport const clickingHeaderSection = (data) => ({\n  type: types.CLICK_HEADER_SECTION, arg: data\n})\nexport const clickingBtnMore = () => ({\n  type: types.CLICK_BTN_MORE,\n})\nexport const clickingMainLogo = () => ({\n  type: types.CLICK_MAIN_LOGO,\n})\nexport const clickingNavLivingInfo = () => ({\n  type: types.CLICK_NAV_LIVING_INFO,\n})\nexport const clickingSearchBtn = () => ({\n  type: types.ClICK_SEARCH_BTN,\n})\nexport const changingHeaderGnb = (type) => ({\n    type: types.CHANGE_HEADER_GNB, arg: type\n})\n\nexport const petchingMainTopNews = () => {\n  return async (dispatch) => {\n      /*let config = {\n          headers: {\n              'Content-Type' : 'application/x-www-form-urlencoded',\n              'Access-Control-Allow-Origin': '*',\n          },\n          responseType: 'json',\n          withCredentials: true,\n          credentials: 'same-origin',\n      }*/\n    await Axios.get(`http://data.koreatimes.com/publishing/la/main_top/main_top.data` )\n    //await fetch('https://cloudreports.net/sample/api/countries.json')\n    //    .then((response) => response.json())\n        .then(function (response) {\n           // console.log(response)\n          dispatch({\n            type: types.PETCHING_MAIN_TOP_NEWS,\n            arg: response.data\n          });\n        })\n        .catch((error) => console.log(error));\n  }\n}\n\nexport const petchingMainNewsList = () => {\n    return async (dispatch) => {\n\n        const branch = 'la';\n        let newsList = new Array();\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top1/top1.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top2/top2.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/top_list/top_list.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        await Axios.get(`http://data.koreatimes.com/publishing/${branch}/economy/economy.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                //console.log(response.data)\n                newsList = newsList.concat(response.data.data)\n                //console.log(newsList)\n            })\n            .catch((error) => console.log(error));\n\n        dispatch({\n            type: types.PETCHING_MAIN_NEWS_LIST,\n            arg: newsList\n        });\n    }\n}\n\nexport const petchingSectionOpinion = () => {\n    return async (dispatch) => {\n\n        await Axios.get(`http://data.koreatimes.com/publishing/la/opinion/opinion.data` )\n            .then(function (response) {\n               // console.log(response.data)\n                dispatch({\n                    type: types.PETCHING_SECTION_OPINION,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n\n\n\n    }\n}\n\nexport const petchingPhotoNews = () => {\n    return async (dispatch) => {\n        /*let config = {\n            headers: {\n                'Content-Type' : 'application/x-www-form-urlencoded',\n                'Access-Control-Allow-Origin': '*',\n            },\n            responseType: 'json',\n            withCredentials: true,\n            credentials: 'same-origin',\n        }*/\n        await Axios.get( `http://data.koreatimes.com/publishing/photonews/la/la.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data)\n                dispatch({\n                    type: types.PETCHING_PHOTO_NEWS,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingMainOpinion = () => {\n    return async (dispatch) => {\n        await Axios.get(`http://data.koreatimes.com/manage/cron/opinion/opinion.data` )\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                // console.log(response.data.data )\n                dispatch({\n                    type: types.PETCHING_MAIN_OPINION,\n                    arg: response.data.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingArticleDetail = (p2, p3) => {\n\n    let p2Index\n\n    if(p3) {\n        p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n    } else {\n        //console.log(p3)\n    }\n    //}\n\n    const url = `http://data.koreatimes.com/article/${p2Index}/${p3}.data`\n    return async (dispatch) => {\n        await Axios.get(url)\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n                 console.log(response.data )\n                dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL,\n                    arg: response.data\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\nexport const petchingArticleDetailBestClick = (p2, p3) => {\n    let p2Index\n\n    if(p3) {\n        p2Index = p2.substring(0, 4) + \"/\" + p2.substring(4, 6) + \"/\" + p2.substring(6, 8);\n    } else {\n        //console.log(p3)\n    }\n    //}\n\n    const url = `http://data.koreatimes.com/manage/cron/bestclick/bestclick.data`\n    return async (dispatch) => {\n        await Axios.get(url)\n        //await fetch('https://cloudreports.net/sample/api/countries.json')\n        //    .then((response) => response.json())\n            .then(function (response) {\n               // console.log(response.data )\n                dispatch({\n                    type: types.PETCHING_ARTICLE_DETAIL_BESTCLICK,\n                    arg: response.data.slice(0,5)\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n}\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}