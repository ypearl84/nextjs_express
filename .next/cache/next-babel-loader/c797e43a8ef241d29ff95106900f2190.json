{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; //import logger from 'redux-logger'\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducer, { initialState as setinitialState } from './reducers';\nimport withRedux from 'next-redux-wrapper';\nimport thunkMiddleware from \"redux-thunk\";\nimport withRouter from 'next/router';\n/*\nexport const initializeStore = (state = initialState) => {\n  const middlewares = [thunkMiddleware, createLogger()]\n  return createStore(reducer, state, compose(applyMiddleware(...middlewares)))\n};\n\n*/\n\nconst persistConfig = {\n  key: 'primary',\n  storage //: AsyncStorage,\n  ,\n  blacklist: ['switchReducer']\n};\nconst persistedReducer = persistReducer(persistConfig, reducer);\nexport const initializeStore = (initialState = setinitialState) => {\n  return createStore(persistedReducer, initialState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};\nexport const reduxPage = comp => withRedux(initializeStore)(comp);","map":{"version":3,"sources":["C:/Users/NewMedia/PhpstormProjects/test1017/sample/test2/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","persistStore","persistReducer","storage","reducer","initialState","setinitialState","withRedux","thunkMiddleware","withRouter","persistConfig","key","blacklist","persistedReducer","initializeStore","reduxPage","comp"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,OAAP,IAAkBC,YAAY,IAAIC,eAAlC,QAAyD,YAAzD;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA;;;;;;;;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,SADe;AAEpBR,EAAAA,OAFoB,CAEZ;AAFY;AAGnBS,EAAAA,SAAS,EAAE,CAAC,eAAD;AAHQ,CAAtB;AAMA,MAAMC,gBAAgB,GAAGX,cAAc,CAACQ,aAAD,EAAgBN,OAAhB,CAAvC;AAIA,OAAO,MAAMU,eAAe,GAAG,CAACT,YAAY,GAAGC,eAAhB,KAAoC;AACjE,SAAOR,WAAW,CACde,gBADc,EAEdR,YAFc,EAGdL,mBAAmB,CAACD,eAAe,CAACS,eAAD,CAAhB,CAHL,CAAlB;AAKD,CANM;AASP,OAAO,MAAMO,SAAS,GAAGC,IAAI,IAAIT,SAAS,CAACO,eAAD,CAAT,CAA2BE,IAA3B,CAA1B","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\n//import logger from 'redux-logger'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport reducer, { initialState as setinitialState } from './reducers'\nimport withRedux from 'next-redux-wrapper'\nimport thunkMiddleware from \"redux-thunk\"\nimport withRouter from 'next/router'\n\n/*\nexport const initializeStore = (state = initialState) => {\n  const middlewares = [thunkMiddleware, createLogger()]\n  return createStore(reducer, state, compose(applyMiddleware(...middlewares)))\n};\n\n*/\nconst persistConfig = {\n  key: 'primary',\n  storage //: AsyncStorage,\n  ,blacklist: ['switchReducer']\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\n\n\nexport const initializeStore = (initialState = setinitialState) => {\n  return createStore(\n      persistedReducer,\n      initialState,\n      composeWithDevTools(applyMiddleware(thunkMiddleware))\n  )\n}\n\n\nexport const reduxPage = comp => withRedux(initializeStore)(comp)\n"]},"metadata":{},"sourceType":"module"}