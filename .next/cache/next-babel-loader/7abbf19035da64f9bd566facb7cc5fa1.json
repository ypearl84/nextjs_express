{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport OpinionList from '../../../constants/opinionList';\n\nclass OpinionMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opinionMenu: false\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    //this.setState({ opinionMenu: true })\n    this.setState((state, props) => ({\n      opinionMenu: this.state.opinionMenu ? false : true\n    }));\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    console.log({\n      match\n    });\n    const title = OpinionList.opinion.find(function (row) {\n      if (row.id == {\n        match\n      }.match.params.p3) {\n        return row;\n      }\n\n      ;\n    });\n    console.log(title);\n    return __jsx(\"div\", {\n      className: !!this.state.opinionMenu ? \"active section opinion_list_top clearfix\" : \"section opinion_list_top clearfix\"\n    }, __jsx(\"h3\", null, title.name), __jsx(\"a\", {\n      onClick: this.onClick,\n      className: \"btn_all_menu\"\n    }, \"\\uC804\\uCCB4\\uBA54\\uB274 \", __jsx(\"span\", {\n      className: \"ico\"\n    })), __jsx(\"div\", {\n      className: \"opinion_all_menu\"\n    }, __jsx(\"ul\", null, OpinionList.opinion.map(row => __jsx(\"li\", {\n      key: row.id,\n      className: row.liClass\n    }, __jsx(\"a\", {\n      href: '/opinion/113/' + row.id\n    }, row.name))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({}, dispatch);\n\nexport default connect(null, mapDispatchToProps)(OpinionMenu);","map":{"version":3,"sources":["C:/Users/NewMedia/PhpstormProjects/test1017/sample/test2/components/body/parts/opinionMenu.js"],"names":["React","Component","connect","bindActionCreators","OpinionList","OpinionMenu","constructor","props","state","opinionMenu","onClick","bind","setState","render","match","console","log","title","opinion","find","row","id","params","p3","name","map","liClass","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,WAAW,EAAE;AAAf,KAAb;AACA,SAAKC,OAAL,GAAgB,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAhB;AACH;;AAEDD,EAAAA,OAAO,GAAG;AACN;AACA,SAAKE,QAAL,CAAc,CAACJ,KAAD,EAAQD,KAAR,MAAmB;AAACE,MAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAX,GAAuB,KAAvB,GAA6B;AAA3C,KAAnB,CAAd;AAEH;;AAEDI,EAAAA,MAAM,GAAI;AAEN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AAA8BQ,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ;AAE9B,UAAMG,KAAK,GAAGb,WAAW,CAACc,OAAZ,CAAoBC,IAApB,CAAyB,UAAUC,GAAV,EAAe;AAClD,UAAIA,GAAG,CAACC,EAAJ,IAAS;AAACP,QAAAA;AAAD,QAAQA,KAAR,CAAcQ,MAAd,CAAqBC,EAAlC,EAAsC;AAAE,eAAOH,GAAP;AAAY;;AAAA;AACvD,KAFa,CAAd;AAIAL,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AAEA,WACI;AAAK,MAAA,SAAS,EAAE,CAAC,CAAC,KAAKT,KAAL,CAAWC,WAAb,GAA2B,0CAA3B,GAAwE;AAAxF,OACI,kBAAKQ,KAAK,CAACO,IAAX,CADJ,EAEI;AAAG,MAAA,OAAO,EAAE,KAAKd,OAAjB;AAA0B,MAAA,SAAS,EAAC;AAApC,oCAAwD;AAAM,MAAA,SAAS,EAAC;AAAhB,MAAxD,CAFJ,EAGI;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,kBAEQN,WAAW,CAACc,OAAZ,CAAoBO,GAApB,CAAyBL,GAAG,IACxB;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAb;AAAiB,MAAA,SAAS,EAAED,GAAG,CAACM;AAAhC,OAAyC;AAAG,MAAA,IAAI,EAAE,kBAAgBN,GAAG,CAACC;AAA7B,OAAkCD,GAAG,CAACI,IAAtC,CAAzC,CADJ,CAFR,CADJ,CAHJ,CADJ;AAeH;;AAvC+B;;AA2CpC,MAAMG,kBAAkB,GAAGC,QAAQ,IAC/BzB,kBAAkB,CAAC,EAAD,EAAOyB,QAAP,CADtB;;AAGA,eAAe1B,OAAO,CAClB,IADkB,EAElByB,kBAFkB,CAAP,CAGbtB,WAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport OpinionList from '../../../constants/opinionList'\r\n\r\nclass OpinionMenu extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { opinionMenu: false };\r\n        this.onClick  = this.onClick.bind(this);\r\n    }\r\n\r\n    onClick() {\r\n        //this.setState({ opinionMenu: true })\r\n        this.setState((state, props) => ({opinionMenu: this.state.opinionMenu?false:true}));\r\n\r\n    }\r\n\r\n    render () {\r\n\r\n        const { match } = this.props; console.log({ match })\r\n\r\n        const title = OpinionList.opinion.find(function (row) {\r\n            if( row.id== {match}.match.params.p3) { return row };\r\n        });\r\n\r\n        console.log(title)\r\n\r\n        return (\r\n            <div className={!!this.state.opinionMenu ? \"active section opinion_list_top clearfix\" : \"section opinion_list_top clearfix\"}>\r\n                <h3>{title.name}</h3>\r\n                <a onClick={this.onClick} className=\"btn_all_menu\">전체메뉴 <span className=\"ico\"></span></a>\r\n                <div className=\"opinion_all_menu\">\r\n                    <ul>\r\n                        {\r\n                            OpinionList.opinion.map( row => (\r\n                                <li key={row.id} className={row.liClass}><a href={'/opinion/113/'+row.id}>{row.name}</a></li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>\r\n    bindActionCreators({  }, dispatch)\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(OpinionMenu)\r\n"]},"metadata":{},"sourceType":"module"}